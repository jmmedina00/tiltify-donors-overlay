{"version":3,"sources":["overlay/AmountDisplay.js","overlay/Donation.js","overlay/Overlay.js","services/tiltify.js","overlay/ConnectedOverlay.js","link-generator/LinkGenerator.js","store/actions.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["currencies","dollar","euro","connect","currencyName","currency","swap","children","internalDivs","className","reverse","Donation","amount","name","toFixed","Overlay","donations$","useState","donations","state","setState","useEffect","subscription","subscribe","err","error","unsubscribe","visualDonations","map","id","getDonations","token","campaign","a","url","firstPath","headers","Headers","Authorization","fetch","currentPrev","response","ok","Error","json","data","prev","links","push","test","highest","React","createElement","interval","pipe","count","Array","fill","_","index","timer","switchMap","from","sort","generateLink","event","preventDefault","queryParams","FormData","target","entries","entry","encodeURIComponent","join","targetUrl","URL","document","location","href","navigator","clipboard","writeText","then","alert","catch","console","log","LinkGenerator","onSubmit","htmlFor","type","value","defaultChecked","LOAD_PARAMS","mapDispatchToProps","loadParams","params","searchParams","reduce","object","key","accessToken","get","campaignId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77964b0a.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst currencies = {\n  dollar: '$',\n  euro: 'â‚¬',\n};\n\nconst AmountDisplay = ({ currency, swap, children }) => {\n  const internalDivs = [\n    <div className=\"amount\" key=\"0\">\n      {children}\n    </div>,\n    <div className=\"currency\" key=\"1\">\n      {currency}\n    </div>,\n  ];\n\n  if (swap) {\n    internalDivs.reverse();\n  }\n\n  return <div className=\"amount-display\">{internalDivs}</div>;\n};\n\nconst mapStateToProps = ({ currency: currencyName, swap }) => ({\n  currency: currencies[currencyName || 'dollar'],\n  swap,\n});\nexport default connect(mapStateToProps)(AmountDisplay);\n","import AmountDisplay from './AmountDisplay';\n\nconst Donation = ({ amount, name }) => (\n  <div className=\"donation\">\n    <div className=\"donor\">{name}</div>\n    <AmountDisplay>{amount.toFixed(2)}</AmountDisplay>\n  </div>\n);\n\nexport default Donation;\n","import { useEffect, useState } from 'react';\nimport Donation from './Donation';\n\nconst Overlay = ({ donations$ }) => {\n  const [state, setState] = useState({ donations: [] });\n\n  useEffect(() => {\n    const subscription = donations$.subscribe(\n      donations => setState({ donations }),\n      err => setState({ error: true })\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [donations$]); // Don't resubscribe unless the donations$ observable itself changes\n\n  if (state.error) {\n    return <p>Token has been banned.</p>;\n  }\n\n  const visualDonations = state.donations.map(({ id, amount, name }) => (\n    <Donation key={id} amount={amount} name={name} />\n  ));\n  return <div>{visualDonations}</div>;\n};\n\nexport default Overlay;\n","export const getDonations = async (token, campaign) => {\n  const url = 'https://tiltify.com';\n  const firstPath = `/api/v3/campaigns/${campaign}/donations?count=100`;\n  const headers = new Headers({ Authorization: `Bearer ${token}` });\n\n  let currentPrev;\n  const donations = [];\n  do {\n    const response = await fetch(url + (currentPrev || firstPath), { headers });\n\n    if (!response.ok) {\n      throw new Error('Token has been banned');\n    }\n\n    const {\n      data,\n      links: { prev },\n    } = await response.json();\n    donations.push(...data);\n    currentPrev = prev;\n  } while (currentPrev);\n\n  return donations;\n};\n","import React from 'react';\nimport Overlay from './Overlay';\nimport { getDonations } from '../services/tiltify';\nimport { connect } from 'react-redux';\nimport { from, interval, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nconst isThisDevMode = () => '_self' in React.createElement('div');\n\nconst mapStateToProps = ({ token, campaign, test, highest }) => ({\n  donations$:\n    test && isThisDevMode()\n      ? interval(5000).pipe(\n          map(count =>\n            new Array(count + 1).fill(0).map((_, index) => ({\n              id: index,\n              name: 'Testing',\n              amount: index * 0.5,\n            }))\n          )\n        )\n      : timer(2000, 60000).pipe(\n          switchMap(() => from(getDonations(token, campaign))),\n          map(data =>\n            data.map(({ id, amount, name }) => ({ id, amount, name }))\n          ),\n          map(data =>\n            !highest ? data : data.sort(({ amount: a }, { amount: b }) => b - a)\n          )\n        ),\n});\n\nexport default connect(mapStateToProps)(Overlay);\n","const generateLink = event => {\n  event.preventDefault();\n  const queryParams = [...new FormData(event.target).entries()]\n    .map(entry => entry.map(encodeURIComponent).join('='))\n    .join('&');\n\n  const targetUrl = `${new URL(document.location).href}?${queryParams}`;\n\n  navigator.clipboard\n    .writeText(targetUrl)\n    .then(() => {\n      alert('URL has been copied to your clipboard');\n    })\n    .catch(error => {\n      alert('An error has ocurred');\n      console.log(error);\n    });\n};\n\nconst LinkGenerator = () => (\n  <div className=\"vertical-center\">\n    <div className=\"horizontal-center\">\n      <form onSubmit={generateLink}>\n        <div className=\"generator\">\n          <div>\n            <label htmlFor=\"campaign\">Campaign id</label>\n            <input type=\"text\" id=\"campaign\" name=\"campaign\"></input>\n          </div>\n          <div>\n            <label htmlFor=\"token\">Access token</label>\n            <input type=\"text\" id=\"token\" name=\"token\"></input>\n          </div>\n          <div>\n            <span className=\"title\">Currency</span>\n            <input type=\"radio\" id=\"dollar\" name=\"currency\" value=\"dollar\" />\n            <label htmlFor=\"dollar\">$</label>\n            <input type=\"radio\" id=\"euro\" name=\"currency\" value=\"euro\" />\n            <label htmlFor=\"euro\">â‚¬</label>\n          </div>\n          <div>\n            <label htmlFor=\"swap\">Currency to the left?</label>\n            <input\n              type=\"checkbox\"\n              id=\"swap\"\n              name=\"swap\"\n              defaultChecked=\"true\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"highest\">Sort by highest amount?</label>\n            <input type=\"checkbox\" id=\"highest\" name=\"highest\" />\n          </div>\n        </div>\n        <button className=\"generate-link\">Generate link</button>\n      </form>\n    </div>\n  </div>\n);\n\nexport default LinkGenerator;\n","export const LOAD_PARAMS = 'LOAD_PARAMS';\nexport const loadParams = params => ({ type: LOAD_PARAMS, data: params });\n","import './App.css';\nimport Overlay from './overlay/ConnectedOverlay';\nimport LinkGenerator from './link-generator/LinkGenerator';\nimport { loadParams } from './store/actions';\nimport { connect } from 'react-redux';\n\nfunction App({ loadParams }) {\n  const params = new URL(document.location).searchParams;\n\n  const objectParams = [...params.entries()].reduce((object, [key, value]) => {\n    object[key] = value;\n    return object;\n  }, {});\n\n  loadParams(objectParams);\n\n  const accessToken = params.get('token');\n  const campaignId = params.get('campaign');\n\n  return accessToken && campaignId ? <Overlay /> : <LinkGenerator />;\n}\n\nconst mapDispatchToProps = { loadParams };\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOAD_PARAMS } from './actions';\n\nconst initialState = {};\n\nexport const reducer = (state = initialState, action) =>\n  action.type === LOAD_PARAMS ? { ...state, ...action.data } : state;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}